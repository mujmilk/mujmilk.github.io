{"total":9,"pageSize":10,"pageCount":1,"data":[{"title":"Webアプリ作成 day1 - AWS EC2 環境構築(Django,MySQL)","slug":"webapp-day1","date":"2023-05-13T11:05:30.000Z","updated":"2023-05-13T11:05:30.000Z","comments":true,"path":"api/articles/webapp-day1.json","excerpt":"","keywords":null,"cover":null,"content":"<hr>\n<h2 id=\"title-AWS-EC2-環境構築-Django-date-2023-01-03-00-00-00tags-updated-2022-01-03-00-00-00\"><a href=\"#title-AWS-EC2-環境構築-Django-date-2023-01-03-00-00-00tags-updated-2022-01-03-00-00-00\" class=\"headerlink\" title=\"title: AWS EC2 環境構築(Django)date: 2023-01-03 00:00:00tags:updated: 2022-01-03 00:00:00\"></a>title: AWS EC2 環境構築(Django)<br>date: 2023-01-03 00:00:00<br>tags:<br>updated: 2022-01-03 00:00:00</h2><h1 id=\"Django-MySQL-AWS-EC2-で爆速Webアプリ構築【1日目】\"><a href=\"#Django-MySQL-AWS-EC2-で爆速Webアプリ構築【1日目】\" class=\"headerlink\" title=\"Django + MySQL + AWS EC2 で爆速Webアプリ構築【1日目】\"></a>Django + MySQL + AWS EC2 で爆速Webアプリ構築【1日目】</h1><p>** 書きかけの記事です **</p>\n<p>作りたい:<br>進捗管理SNS</p>\n<ul>\n<li>markdownで書ける</li>\n<li>グラフも投稿できる</li>\n</ul>\n<p>開始地点の知識レベル:</p>\n<ul>\n<li>Djangoって何？</li>\n<li>SQLは少し使ったことある</li>\n<li>AWS EC2って何？</li>\n</ul>\n<hr>\n<h2 id=\"toDo\"><a href=\"#toDo\" class=\"headerlink\" title=\"toDo\"></a>toDo</h2><ul>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> アプリケーション機能要件</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> アプリケーション画面設計<ul>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 見た目の画像</li>\n</ul>\n</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> アプリケーションデータベース設計</li>\n<li>[] ローカル環境構築(docker)</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> AWSをレンタル</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 環境構築(Django, Nginx, MySQL)<ul>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> MySQLでデータベース作成<ul>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> MySQLのタイムゾーン設定</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>[] Bootstrapを導入、見た目をいい感じにする</li>\n<li>[] Webアプリケーションログイン画面の構築</li>\n</ul>\n<p>AWSの設定まで<br><a href=\"https://qiita.com/Bashi50/items/d5bc47eeb9668304aaa2\">https://qiita.com/Bashi50/items/d5bc47eeb9668304aaa2</a></p>\n<p>Ubuntuにログイン<br>使い慣れてたのでMySQLを導入<br><code>sudo apt install mysql-server nginx</code></p>\n<h2 id=\"MySQL初期設定\"><a href=\"#MySQL初期設定\" class=\"headerlink\" title=\"MySQL初期設定\"></a>MySQL初期設定</h2><p>sudo apt install mysql-server<br>sudo service mysql start</p>\n<p>sudo mysql_secure_installation</p>\n<p>再起動: sudo service mysql restart<br>状態確認: sudo service mysql status<br>起動: sudo mysql -u root -p</p>\n<p>エラーが発生したら<br><code>less /var/log/mysql/error.log</code><br>sockファイルが作れない</p>\n<p><code>cat /etc/passwd</code><br>mysqlのところが&#x2F;unexistになってたら↓</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo usermod -d /var/lib/mysql mysql</span><br><span class=\"line\"></span><br><span class=\"line\">$ sudo chown -R mysql:mysql /var/lib/mysql*</span><br><span class=\"line\">(mysql, mysql-files, mysql-upgrade)</span><br><span class=\"line\"></span><br><span class=\"line\">$ sudo chown -R mysql:mysql /var/run/mysqld/</span><br><span class=\"line\"></span><br><span class=\"line\">$ sudo chown mysql:mysql /usr/sbin/mysqld</span><br></pre></td></tr></table></figure>\n<p>権限の初期化について(<a href=\"https://codenote.net/mysql/339.html\">https://codenote.net/mysql/339.html</a>)</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">user create</span><br><span class=\"line\">CREATE USER &#x27;username&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;password&#x27;;</span><br></pre></td></tr></table></figure>\n\n<p>パスワードで引っかかるなら mysqlで起動して↓で設定する　それもだめなら↓↓</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SHOW VARIABLES LIKE &#x27;validate_password%&#x27;;</span><br><span class=\"line\">set global validate_password.policy=LOW;</span><br></pre></td></tr></table></figure>\n\n\n<p>操作権限を与える</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GRANT ALL PRIVILEGES ON * . * TO &#x27;newuser&#x27;@&#x27;localhost&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">GRANT type_of_permission ON database_name.table_name TO &#x27;username&#x27;@&#x27;localhost&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">    ALL PRIVILEGES-前述したように、MySQLユーザーは指定されたデータベースへフルアクセスができます（または、データベースが選択されていない場合は、システム全体のグローバルアクセスができます）。</span><br><span class=\"line\">    CREATE - 新しいテーブルまたはデータベースを作成できます。</span><br><span class=\"line\">    DROP - テーブルまたはデータベースを削除できます。</span><br><span class=\"line\">    DELETE - テーブルから行を削除できます。</span><br><span class=\"line\">    INSERT - テーブルに行を挿入できます。</span><br><span class=\"line\">    SELECT - SELECTコマンドを使用してデータベースを読み取ることができます。</span><br><span class=\"line\">    UPDATE - テーブルの行を更新できます。</span><br><span class=\"line\">    GRANT OPTION - 他のユーザーの権限の付与または削除ができます。</span><br><span class=\"line\">(https://www.digitalocean.com/community/tutorials/how-to-create-a-new-user-and-grant-permissions-in-mysql-ja)</span><br></pre></td></tr></table></figure>\n\n<p>データベース作成</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE DATABASE test_database;</span><br><span class=\"line\">USE test_database;</span><br><span class=\"line\"></span><br><span class=\"line\">CREATE TABLE users (id INT AUTO_INCREMENT, name TEXT,</span><br><span class=\"line\">PRIMARY KEY (id));</span><br><span class=\"line\"></span><br><span class=\"line\">SHOW tables;</span><br><span class=\"line\">DESCRIBE users;</span><br><span class=\"line\"></span><br><span class=\"line\">INSERT INTO users(name) VALUES(&#x27;USERNAME&#x27;);</span><br></pre></td></tr></table></figure>\n\n<p>テーブルの削除<br>DROP TABLE テーブル名(users);<br>データベースの削除<br>DROP DATABASE データベース名(test_database);</p>\n<p><a href=\"https://prog-8.com/docs/nodejs-mysql\">https://prog-8.com/docs/nodejs-mysql</a><br>node app.js</p>\n<p>データベースの読み込みと変更<br><a href=\"https://programming-engineer.com/nodejs-database-edit/\">https://programming-engineer.com/nodejs-database-edit/</a></p>\n<p>接続時にエラー<br>内容と解決法: <a href=\"https://mebee.info/2021/06/17/post-24512/\">https://mebee.info/2021/06/17/post-24512/</a></p>\n<p>文字コードをutf8に変える<br>参考: <a href=\"http://ucwd.jp/blog/814\">http://ucwd.jp/blog/814</a></p>\n<p>INSERT INTO app_post (title, content, created_at, updated_at) VALUES(‘title’, ‘本文’, ‘1000-01-01 00:00:00.000000’, ‘1000-01-01 00:00:00.000000’);<br>文字コードをutf8にする</p>\n<p>↓のコマンドで日本時間に設定しようとしたが、</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">show variables like &quot;%time_zone%&quot;;</span><br><span class=\"line\">$ /usr/bin/mysql_tzinfo_to_sql /usr/share/zoneinfo &gt; ~/timezone.sql</span><br><span class=\"line\">$ mysql -u root -p -Dmysql &lt; ~/timezone.sql</span><br><span class=\"line\">or $ /usr/bin/mysql_tzinfo_to_sql /usr/share/zoneinfo | mysql -u ihara -p mysql</span><br></pre></td></tr></table></figure>\n<p>↑どっちも設定してくれない。ダメ</p>\n<p>mysql &gt; set time_zone&#x3D;’+9:00’はいけるのにset globalはムリ<br>RDS系はだめらしい？<br>&#x2F;etc&#x2F;mysql&#x2F;my.cnfにcnfの場所が記載されている<br>&#x2F;etc&#x2F;mysql&#x2F;conf.d&#x2F;mysql.cnfの[mysqld]にdefault_time_zone&#x3D;’+9:00’を追記したらいけた<br>select time();で時間確認</p>\n<p>トランザクション分離レベルを設定<br>transaction-isolation &#x3D; READ-COMMITTED</p>\n<h2 id=\"データベースの作成\"><a href=\"#データベースの作成\" class=\"headerlink\" title=\"データベースの作成\"></a>データベースの作成</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE DATABASE howis_database;</span><br><span class=\"line\">USE howis_database;</span><br><span class=\"line\">CREATE TABLE users (user_id INT UNSIGNED AUTO_INCREMENT, user_email VARCHAR(320), user_password VARCHAR(150), user_name VARCHAR(40),　user_registration_date DATE, user_updated_date DATE, PRIMARY KEY (user_id));</span><br><span class=\"line\"></span><br><span class=\"line\">CREATE TABLE posts (post_id BIGINT UNSIGNED AUTO_INCREMENT, post_user INT UNSIGNED, post_date DATETIME, edited BIT(1), edited_date DATETIME, post_title VARCHAR(50),　post_summary VARCHAR(250), post_content TEXT, FOREIGN KEY fk_post_user(post_user) REFERENCES users(user_id), PRIMARY KEY (post_id));</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Django環境構築\"><a href=\"#Django環境構築\" class=\"headerlink\" title=\"Django環境構築\"></a>Django環境構築</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ pip install django django-environ dj-database-url</span><br><span class=\"line\">$ sudo apt install python3-django</span><br><span class=\"line\">$ django-admin startproject AppName .</span><br><span class=\"line\">$ django-admin startapp app</span><br></pre></td></tr></table></figure>\n\n<p>settingsからsecretkeyなどを削除, .envに退避させる<br>(<a href=\"https://qiita.com/Bashi50/items/d5bc47eeb9668304aaa2)[https://qiita.com/Bashi50/items/d5bc47eeb9668304aaa2]\">https://qiita.com/Bashi50/items/d5bc47eeb9668304aaa2)[https://qiita.com/Bashi50/items/d5bc47eeb9668304aaa2]</a><br>Django, MySQL: (<a href=\"https://qiita.com/kanazawa1226/items/e222604943c500801746)[https://qiita.com/kanazawa1226/items/e222604943c500801746]\">https://qiita.com/kanazawa1226/items/e222604943c500801746)[https://qiita.com/kanazawa1226/items/e222604943c500801746]</a></p>\n<p>PythonがMySQLにアクセスするためのドライバのインストール<br>mysqlclient（MySQL-Pythonをpython3に対応させたOSS。Djangoの推奨ドライバ）</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo apt -y install libmysqlclient-dev</span><br><span class=\"line\">$ pip install mysqlclient</span><br></pre></td></tr></table></figure>\n\n<p>.envにARROWED_HOSTSを追記する(AWS EC2インスタンスのelastic IPアドレス)<br>mysql:&#x2F;&#x2F;root:(最初の方で設定したrootのパスワード)@127.0.0.1:3306&#x2F;(db_name)<br>settings.pyを変更</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python3 manage.py migrate</span><br><span class=\"line\"># EC2の設定で8000ポート許可して以下を実行</span><br><span class=\"line\">$ python3 manage.py runserver 0.0.0.0:8000</span><br></pre></td></tr></table></figure>\n<p>ブラウザにインスタンスのipアドレス:8000を入力すればつながる!</p>\n<p>&#x2F;etc&#x2F;systemd&#x2F;system&#x2F;gunicorn.serviceにgunicornの設定を追加</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo apt install gunicorn</span><br><span class=\"line\">$ whereis gunicorn</span><br></pre></td></tr></table></figure>\n<p><code>/usr/bin/gunicorn</code></p>\n<p>&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;nginx.service<br>&#x2F;etc&#x2F;nginx&#x2F;sites-available&#x2F;Launch<br>自動起動設定</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo systemctl start gunicorn.service</span><br><span class=\"line\">$ sudo systemctl enable gunicorn</span><br></pre></td></tr></table></figure>\n\n<p><code>sudo ln -s /etc/nginx/sites-available/Launch /etc/nginx/sites-enabled/</code></p>\n<p>502 Bad Gateway…<br>nginxのログのパス確認</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ less /etc/nginx/nginx.conf</span><br></pre></td></tr></table></figure>\n<p>…<br>access_log &#x2F;var&#x2F;log&#x2F;nginx&#x2F;access.log;<br>error_log &#x2F;var&#x2F;log&#x2F;nginx&#x2F;error.log;<br>…</p>\n<p>connect() to unix:&#x2F;hoge.sock failed (13: Permission denied) while connecting to upstream, client: a.a.a.a, server: a.a.a.a, request: “GET &#x2F; HTTP&#x2F;1.1”, upstream: “<a href=\"http://unix/home/ubuntu/HowistheProgress/howisApp.sock:/\">http://unix:/home/ubuntu/HowistheProgress/howisApp.sock:/</a>“, host: “a.a.a.a”<br>ただのpermissionエラーでよかった～<br>権限変更</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo vim /etc/nginx/nginx.conf</span><br><span class=\"line\">user ubuntu(or root)</span><br></pre></td></tr></table></figure>\n\n<p>順調！</p>\n<p>model.pyに追記<br>python manage. py createsuperuser<br>IPアドレス&#x2F;adminでログイン</p>\n<p>bootstrap テーマ導入しようとしてうまくいかず1日目終了</p>\n","text":"title: AWS EC2 環境構築(Django)<br>date: 2023-01-03 00:00:00<br>tags:<br>updated: 2022-01-03 00:00:00Django + MySQL + AWS EC2 で爆速Webアプリ構築【1日目】**","link":"","raw":null,"photos":[],"categories":[],"tags":[]},{"title":"minecraft-server-1.18.1","slug":"minecraft-server-1-18-1","date":"2022-01-12T10:13:10.000Z","updated":"2022-01-12T10:13:10.000Z","comments":true,"path":"api/articles/minecraft-server-1-18-1.json","excerpt":"","keywords":null,"cover":null,"content":"<h1 id=\"Minecraft-サーバ構築方法-amp-配布ワールドの導入\"><a href=\"#Minecraft-サーバ構築方法-amp-配布ワールドの導入\" class=\"headerlink\" title=\"Minecraft サーバ構築方法 &amp; 配布ワールドの導入\"></a>Minecraft サーバ構築方法 &amp; 配布ワールドの導入</h1><h2 id=\"環境\"><a href=\"#環境\" class=\"headerlink\" title=\"環境\"></a>環境</h2><p>Minecraft 1.18.1<br>CentOS 7.2 (7.2よりも新しいバージョンだとscreenが入らなかった)  </p>\n<h2 id=\"概要\"><a href=\"#概要\" class=\"headerlink\" title=\"概要\"></a>概要</h2><p><a href=\"https://minecraft.server-memo.net/conoha_mc_install/\">【CentOS 7】ConoHaのVPSでマイクラマルチサーバを構築 | minecraft.server-memo.net</a>を参考にMinecraftマルチ用サーバを構築したときのメモ</p>\n<h2 id=\"目次\"><a href=\"#目次\" class=\"headerlink\" title=\"目次\"></a>目次</h2><p>１．構築手順<br>２．配布ワールドの導入方法  </p>\n<hr>\n<h2 id=\"１．構築手順\"><a href=\"#１．構築手順\" class=\"headerlink\" title=\"１．構築手順\"></a>１．構築手順</h2><ol>\n<li><p>サーバに接続する</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh root@IPアドレス</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>アップデートしてからサーバを再起動する</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y update</span><br><span class=\"line\">reboot</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>サーバに再接続する</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh root@IPアドレス</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Minecraftをプレイするユーザ用のアカウントを追加する</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">adduser minecraft</span><br><span class=\"line\">passwd minecraft</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"必要なパッケージをインストールする\"><a href=\"#必要なパッケージをインストールする\" class=\"headerlink\" title=\"必要なパッケージをインストールする\"></a>必要なパッケージをインストールする</h3><ol start=\"5\">\n<li>Javaをインストールする<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install java-17-openjdk java-17-openjdk-devel</span><br></pre></td></tr></table></figure></li>\n</ol>\n<ul>\n<li>Minecraft 1.17.1 ならJava16を入れるらしい．</li>\n<li>(更新2023&#x2F;10&#x2F;14)上記コマンドで入らない場合: 以下のコマンドを代わりに実行する(参考: <a href=\"https://it-jog.com/java/intro/install-openjdk-oncentos7\">OpenJDKをインストールする【CentOS7】</a>)<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat &lt;&lt;EOF &gt; /etc/yum.repos.d/adoptium.repo</span><br><span class=\"line\">[Adoptium]</span><br><span class=\"line\">name=Adoptium</span><br><span class=\"line\">baseurl=https://packages.adoptium.net/artifactory/rpm/$&#123;DISTRIBUTION_NAME:-$(. /etc/os-release; echo $ID)&#125;/\\$releasever/\\$basearch</span><br><span class=\"line\">enabled=1</span><br><span class=\"line\">gpgcheck=1</span><br><span class=\"line\">gpgkey=https://packages.adoptium.net/artifactory/api/gpg/key/public</span><br><span class=\"line\">EOF</span><br><span class=\"line\"></span><br><span class=\"line\">yum -y install temurin-17-jdk</span><br></pre></td></tr></table></figure></li>\n</ul>\n<ol start=\"6\">\n<li>screenをインストールする<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install screen</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"ポートの設定をする\"><a href=\"#ポートの設定をする\" class=\"headerlink\" title=\"ポートの設定をする\"></a>ポートの設定をする</h3><p><a href=\"https://minecraft.server-memo.net/conoha_mc_install/\">【CentOS 7】ConoHaのVPSでマイクラマルチサーバを構築 | minecraft.server-memo.net</a> の SSH設定，ファイアウォール設定 のところを実行する</p>\n<details>\n<summary>詳細手順(クリックで開きます)</summary>\n<div>\n\n<ol>\n<li>sshd_configを開いてsshで使用するポート番号を編集し，rootでssh接続することを禁止する．<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cp -p /etc/ssh/sshd_config /etc/ssh/sshd_config_20220112</span><br><span class=\"line\">vi /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure></li>\n</ol>\n<ul>\n<li>sshd_configが開いたら，PermitRootLoginをno，Port 22をPort 12222に変更する</li>\n</ul>\n<ol start=\"2\">\n<li><p>sshdを再起動する</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl restart sshd</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>ファイアウォールの設定を行う．12222番(ssh用)，25565番(ゲームプレイ用)ポートを開き，元からあるsshのポートを閉じる</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">firewall-cmd --permanent --add-port=12222/tcp</span><br><span class=\"line\">firewall-cmd --permanent --remove-service=ssh</span><br><span class=\"line\">firewall-cmd --permanent --add-port=25565/tcp</span><br><span class=\"line\">firewall-cmd --reload</span><br></pre></td></tr></table></figure>\n</div>\n</details></li>\n</ol>\n<h4 id=\"ここまで設定できたら\"><a href=\"#ここまで設定できたら\" class=\"headerlink\" title=\"ここまで設定できたら\"></a>ここまで設定できたら</h4><ul>\n<li>次回サーバにログインするときは <code>ssh -p 12222 minecraft@IPアドレス</code> のように，<code>-p</code>オプションをつけてポート番号を指定する．(何も付けなければ自動的に22番でアクセスを試みる)</li>\n<li>Minecraftをプレイするときは，マルチプレイの設定画面でサーバアドレスを<code>IPアドレス:25565</code>のようにする</li>\n<li>(conohaVPSを使っている場合)この設定を行った後サーバの管理画面orレンタル画面でポート番号のアクセス許可設定をいじるとうまくアクセスできなくなるので注意</li>\n</ul>\n<h3 id=\"Minecraftのサーバをインストールする\"><a href=\"#Minecraftのサーバをインストールする\" class=\"headerlink\" title=\"Minecraftのサーバをインストールする\"></a>Minecraftのサーバをインストールする</h3><ol>\n<li><p>サーバをインストールするディレクトリを作成する</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir /opt/minecraft</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>ディレクトリの所有者を先程作成したMinecraftユーザ用のアカウントに設定する <strong>(重要)</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chown minecraft:minecraft /opt/minecraft</span><br></pre></td></tr></table></figure></li>\n</ol>\n<ul>\n<li>rootが所有者になっているファイルにMinecraftをプレイするユーザはアクセスできない．<br>  うまく配布ワールド等が導入できない場合は，所有者の設定をミスっているのが原因かも?</li>\n</ul>\n<ol start=\"3\">\n<li>Minecraftをプレイするユーザ用のアカウントに切り替え，必要なファイルをダウンロードする<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">su - minecraft</span><br><span class=\"line\">cd /opt/minecraft</span><br><span class=\"line\">wget https://launcher.mojang.com/v1/objects/125e5adf40c659fd3bce3e66e67a16bb49ecc1b9/server.jar</span><br></pre></td></tr></table></figure></li>\n</ol>\n<ul>\n<li>↑は2022&#x2F;01&#x2F;12時点のリンク．切れていたら <a href=\"https://www.minecraft.net/ja-jp/download/server\">https://www.minecraft.net/ja-jp/download/server</a> で確認(<code>minecraft_server.1.18.1.jar</code>を右クリック-&gt;リンクをコピー)</li>\n</ul>\n<ol start=\"4\">\n<li>ファイルをバックアップ，サーバを起動<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cp server.jar minecraft_server.jar</span><br><span class=\"line\">mv server.jar minecraft_server_1.18.1.jar</span><br><span class=\"line\">java -Xms1024M -Xmx1024M -jar minecraft_server.jar nogui</span><br></pre></td></tr></table></figure></li>\n</ol>\n<ul>\n<li>設定ファイルが生成された後，停止する</li>\n</ul>\n<ol start=\"5\">\n<li><p>↑の実行が終わったら，生成されたeula.txtを開き，<code>eula=false</code>の行を<code>eula=true</code>に変更する</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi eula.txt</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>再度以下のコマンドを実行すると，正常に起動できるはず</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java -Xms1024M -Xmx1024M -jar minecraft_server.jar nogui</span><br></pre></td></tr></table></figure>\n<p>起動中に<code>stop</code>と入力することで停止する</p>\n</li>\n</ol>\n<hr>\n<h3 id=\"その他設定\"><a href=\"#その他設定\" class=\"headerlink\" title=\"その他設定\"></a>その他設定</h3><p>起動スクリプト，自動起動の設定をするなら: <a href=\"https://minecraft.server-memo.net/conoha_mc_install/\">【CentOS 7】ConoHaのVPSでマイクラマルチサーバを構築 | minecraft.server-memo.net</a><br>サーバ側にModを導入する: <a href=\"https://minecraft.server-memo.net/forge_server_install/\">CentOS7にMinecraft Forgeサーバをインストールする方法 | minecraft.server-memo.net</a><br>クライアント側にModを導入する:<br><a href=\"https://support.conoha.jp/v/hellovps-m-04/?btn_id=v-hellovps-m-03-sidebar_v-hellovps-m-04\">Modを導入してMinecraftで遊んでみよう｜ConoHa VPSサポート</a> </p>\n<hr>\n<h3 id=\"２．配布ワールドの導入方法\"><a href=\"#２．配布ワールドの導入方法\" class=\"headerlink\" title=\"２．配布ワールドの導入方法\"></a>２．配布ワールドの導入方法</h3><ol>\n<li><p>server.propertiesを開き，<code>enable-command-block=false</code>の行を<code>enable-command-block=true</code>に変更する</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi server.properties</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>配布ワールドが入ったZIPファイルをダウンロードする</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget ダウンロードリンク</span><br></pre></td></tr></table></figure></li>\n</ol>\n<ul>\n<li>直でダウンロードできるリンクがわからない場合は，一旦PCにダウンロードしてから<code>scp -P 12222 ZIPファイル名 minecraft@IPアドレス:/opt/minecraft/</code>で転送する</li>\n</ul>\n<ol start=\"3\">\n<li><p>ZIPファイルを解凍し，worldフォルダをバックアップしてから解凍してできたフォルダの名前をworldに変更する</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">unzip ダウンロードしたファイル.zip</span><br><span class=\"line\">mv world original_world</span><br><span class=\"line\">mv 解凍してできたフォルダ名 world</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>再度サーバを起動してゲームにログインすると，配布ワールドが導入できているはず</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java -Xms1024M -Xmx1024M -jar minecraft_server.jar nogui</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"コマンドメモ\"><a href=\"#コマンドメモ\" class=\"headerlink\" title=\"コマンドメモ\"></a>コマンドメモ</h3><ul>\n<li><code>/op ユーザ名</code>: ユーザにオペレータ権限を付与する(サーバ側で実行)</li>\n<li><code>/gamemode survival/adventure/creative</code>: ゲームモードを変更する</li>\n<li><code>/difficulty peaceful/easy/normal/hard</code>: 難易度変更</li>\n<li><code>/tp ユーザ名 x座標 y座標 z座標</code>: ユーザをx y zの位置にテレポートさせる(<code>@a</code>で全員，座標に<code>~</code>とすると現在位置が入る 例:<code>/tp @a ~ ~ ~</code>で全員自分のいる場所にワープしてくる)</li>\n<li>参考<ul>\n<li><a href=\"https://minecraft.fandom.com/ja/wiki/%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89\">コマンド - Minecraft Wiki</a></li>\n<li><a href=\"https://gamepedia.jp/minecraft/archives/11925\">【マイクラJava版】【Java版】チートコマンドの基本を解説！使い方とよく使うコマンド一覧【Minecraft】 – 攻略大百科</a></li>\n</ul>\n</li>\n</ul>\n","text":"Minecraft サーバ構築方法 &amp; 配布ワールドの導入環境Minecraft 1.18.1<br>CentOS 7.2 (7.2よりも新しいバージョンだとscreenが入らなかった)  概要【CentOS 7】ConoHaのVPSでマイクラマルチサーバを構築 | mi","link":"","raw":null,"photos":[],"categories":[],"tags":[]},{"title":"Google Form Submission Check(下書)","slug":"Google-Form-Submission-Check","date":"2021-06-05T10:11:15.000Z","updated":"2021-06-05T10:11:15.000Z","comments":true,"path":"api/articles/Google-Form-Submission-Check.json","excerpt":"","keywords":null,"cover":null,"content":"<h1 id=\"Google-Form-Submission-Checkを作成したときのメモ\"><a href=\"#Google-Form-Submission-Checkを作成したときのメモ\" class=\"headerlink\" title=\"Google Form Submission Checkを作成したときのメモ\"></a><a href=\"https://github.com/mujmilk/google-form-submission-check\">Google Form Submission Check</a>を作成したときのメモ</h1><p>【この記事は作成途中です】</p>\n<h2 id=\"ファイル名一覧を取得\"><a href=\"#ファイル名一覧を取得\" class=\"headerlink\" title=\"ファイル名一覧を取得\"></a>ファイル名一覧を取得</h2><p>スプレッドシートを新規作成＞スクリプトエディタ<br><a href=\"https://qiita.com/akiko-pusu/items/43c89dcfeb1d544cce38\">https://qiita.com/akiko-pusu/items/43c89dcfeb1d544cce38</a><br>フォルダのidは<a href=\"https://drive.google.com/drive/u/3/folders/xxx%E3%81%AExxx\">https://drive.google.com/drive/u/3/folders/xxxのxxx</a><br>getSheetByName(sheetName)をSpreadsheetApp.getActiveSheet()に変更<br>ss&#x3D;getActiveを削除<br>sheetNameの行を削除<br>このエラーでつまった：<a href=\"https://note.com/yogox/n/nec670c8866e7\">https://note.com/yogox/n/nec670c8866e7</a><br>（getActiveSheetとgetActiveSpreadSheetの違いに注意:スプレッドシートの中に複数シートがある：<a href=\"https://memodays.jp/584/#toc3%EF%BC%89\">https://memodays.jp/584/#toc3）</a><br>ひとまずフォルダ一覧を書き出すことに成功</p>\n<ul>\n<li>ファイル名一覧から名前を探す</li>\n<li>書式を揃える-&gt;名前でソート</li>\n<li>今回の要件を満たした名前を抽出</li>\n<li>その名前のところに〇を書き込んだシートを出力<br>スプレッドシートの読み込み<a href=\"https://auto-worker.com/blog/?p=640\">https://auto-worker.com/blog/?p=640</a><br>連想配列にはlength型がない<a href=\"https://rabbitfoot.xyz/gas-associativearray/\">https://rabbitfoot.xyz/gas-associativearray/</a><br>連想配列の連想配列も作れる<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hoge = &#123;&#125;;</span><br><span class=\"line\">hoge[&quot;key&quot;] = &#123;&quot;key2&quot;:value&#125;;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<p>文字列の切り出しにはsplit<br><code>let text = &quot;hoge - fuga.txt&quot;</code>　からfugaを切り出す</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">let splitText = text.split(&quot; - &quot;);</span><br><span class=\"line\">let splitText2 = splitText[1].split(&quot;.txt&quot;);</span><br><span class=\"line\">Logger.log(splitText2[0]);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt; fuga</span><br></pre></td></tr></table></figure>\n\n<p>forEachが使える <a href=\"https://qiita.com/wifeofvillon/items/15359535a834832e08ea\">https://qiita.com/wifeofvillon/items/15359535a834832e08ea</a></p>\n<p>連想配列のキーの存在有無<br><code>a in hoge</code> や <code>a[hoge]:undefined</code> は使えなかった</p>\n<p>日付の取得<br><a href=\"https://for-dummies.net/gas-noobs/how-to-get-updated-date-of-folders-and-files-on-google-drive/\">https://for-dummies.net/gas-noobs/how-to-get-updated-date-of-folders-and-files-on-google-drive/</a><br><code>parseInt()</code>か<code>Number()</code> で文字列→数値に変換<br>比較して締め切り前に更新されたファイルのみ取得<br>年をまたぐと比較不可に，その他にも色々バグがあった<br>→Date型を生成して直接比較演算子(＞,＜)が使える！<br>buff.getLastUpdated(); で返ってくるのはDate型</p>\n","text":"Google Form Submission Checkを作成したときのメモ【この記事は作成途中です】ファイル名一覧を取得スプレッドシートを新規作成＞スクリプトエディタ<br>https://qiita.com/akiko-pusu/items/43c89dcfeb1d544cc","link":"","raw":null,"photos":[],"categories":[],"tags":[]},{"title":"Base16 Terminal Colors for VSCodeのカラーテーマをWindows Terminalで使う","slug":"TerminalColor-VSCode-to-WinTerminal","date":"2021-06-05T06:37:32.000Z","updated":"2021-06-05T06:37:32.000Z","comments":true,"path":"api/articles/TerminalColor-VSCode-to-WinTerminal.json","excerpt":"","keywords":null,"cover":null,"content":"<h1 id=\"概要\"><a href=\"#概要\" class=\"headerlink\" title=\"概要\"></a>概要</h1><p><a href=\"https://glitchbone.github.io/vscode-base16-term/\">Base16 Terminal Colors for Visual Studio Code</a><br>のターミナルカラー設定をWindows Terminal用に変換するPythonコードを作成した</p>\n<h1 id=\"使い方\"><a href=\"#使い方\" class=\"headerlink\" title=\"使い方\"></a>使い方</h1><ol>\n<li><p><a href=\"https://glitchbone.github.io/vscode-base16-term/\">Base16 Terminal Colors for Visual Studio Code</a>からカラーテーマを探す</p>\n</li>\n<li><p><code>Copy to clipboard</code>を押す(カラーテーマがコピーされる)</p>\n</li>\n<li><p><a href=\"https://paiza.io/ja/projects/new?language=python3\">ここ</a>の入力タブにコピーした内容を貼り付ける<br>(もしくはPythonの実行環境で実行する）</p>\n</li>\n<li><p>下記のコードを実行</p>\n</li>\n</ol>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">theme = <span class=\"string\">&#x27;テーマ名&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;,&#123;&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&quot;name&quot;:&quot;&#x27;</span>+theme+<span class=\"string\">&#x27;&quot;,&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">20</span>):</span><br><span class=\"line\">    <span class=\"built_in\">str</span> = <span class=\"built_in\">input</span>().split(<span class=\"string\">&#x27;.&#x27;</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">str</span>[<span class=\"number\">1</span>] = <span class=\"built_in\">str</span>[<span class=\"number\">1</span>].replace(<span class=\"string\">&#x27;Magenta&#x27;</span>,<span class=\"string\">&#x27;Purple&#x27;</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"string\">&#x27;terminalCursor&#x27;</span> <span class=\"keyword\">in</span> <span class=\"built_in\">str</span>[<span class=\"number\">0</span>]:</span><br><span class=\"line\">        <span class=\"built_in\">str</span>[<span class=\"number\">1</span>] = <span class=\"string\">&#x27;selection&#x27;</span> + <span class=\"built_in\">str</span>[<span class=\"number\">1</span>].capitalize()</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> <span class=\"string\">&#x27;Bright&#x27;</span> <span class=\"keyword\">in</span> <span class=\"built_in\">str</span>[<span class=\"number\">1</span>]:</span><br><span class=\"line\">        <span class=\"built_in\">str</span>[<span class=\"number\">1</span>] = <span class=\"built_in\">str</span>[<span class=\"number\">1</span>].replace(<span class=\"string\">&#x27;Bright&#x27;</span>,<span class=\"string\">&#x27;bright&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"built_in\">str</span>[<span class=\"number\">1</span>] = <span class=\"built_in\">str</span>[<span class=\"number\">1</span>].lower()</span><br><span class=\"line\">    </span><br><span class=\"line\">    s = <span class=\"string\">&#x27;&quot;&#x27;</span> + <span class=\"built_in\">str</span>[<span class=\"number\">1</span>].replace(<span class=\"string\">&#x27;ansi&#x27;</span>,<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">print</span>(s)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"string\">&#x27;selectionForeground&#x27;</span> <span class=\"keyword\">in</span> s:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&quot;cursorColor&quot;:&quot;&#x27;</span> + s.split(<span class=\"string\">&#x27;&quot;&#x27;</span>)[-<span class=\"number\">2</span>] + <span class=\"string\">&#x27;&quot;,&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#125;&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<ol start=\"5\">\n<li>Windows Terminal用に変換されたカラーテーマが出力される</li>\n</ol>\n<h2 id=\"Windows-Terminalへカラーテーマを追加する\"><a href=\"#Windows-Terminalへカラーテーマを追加する\" class=\"headerlink\" title=\"Windows Terminalへカラーテーマを追加する\"></a>Windows Terminalへカラーテーマを追加する</h2><ol>\n<li>Windows Terminalを起動する</li>\n<li><code>Ctrl + ,</code>を押す</li>\n<li>左下の設定ボタン(歯車アイコン)を押し，settings.jsonファイルを開く</li>\n<li><code>&quot;schemes&quot;:</code>の{}の中の一番下に，先程の出力結果を貼り付ける</li>\n<li>貼り付けた中の<code>&quot;name&quot;:&quot;テーマ名&quot;</code>を，テーマの名前に変更(例:Gruvbox Dark Pale)</li>\n<li>setting.jsonの47行目前後にある<code>&quot;defaults&quot;:</code>の{}の中に，下記を追加する<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;colorScheme&quot;: &quot;テーマの名前&quot;</span><br></pre></td></tr></table></figure></li>\n<li>setting.jsonを上書き保存すると，反映されているはず</li>\n</ol>\n","text":"概要Base16 Terminal Colors for Visual Studio Code<br>のターミナルカラー設定をWindows Terminal用に変換するPythonコードを作成した使い方Base16 Terminal Colors for Visual Stud","link":"","raw":null,"photos":[],"categories":[],"tags":[]},{"title":"core dump(linux)手順 セグメントエラー発生時などに","slug":"linux-core-dump-procedure","date":"2021-06-05T05:27:09.000Z","updated":"2021-06-05T05:27:09.000Z","comments":true,"path":"api/articles/linux-core-dump-procedure.json","excerpt":"","keywords":null,"cover":null,"content":"<ol>\n<li><p>コアダンプ機能を有効にする<br><code>ulimit -c unlimited</code></p>\n</li>\n<li><p>gオプションをつけてコンパイル<br><code>gcc hoge.c -g</code></p>\n</li>\n<li><p>実行ファイルを実行する<br><code>./実行ファイル名</code></p>\n</li>\n<li><p>gdbでデバッグ<br><code>gdb ./実行ファイル名 core</code></p>\n</li>\n</ol>\n<p>(gdbがインストールされていなければ，インストールする)<br><code>sudo apt install gdb</code></p>\n","text":"コアダンプ機能を有効にする<br>ulimit -c unlimitedgオプションをつけてコンパイル<br>gcc hoge.c -g実行ファイルを実行する<br>./実行ファイル名gdbでデバッグ<br>gdb ./実行ファイル名 core(gdbがインストールされていなけれ","link":"","raw":null,"photos":[],"categories":[],"tags":[]},{"title":"WSL(Windows Subsystem for Linux)の端末上から使えるGUIテキストエディタ","slug":"WSL-texteditor","date":"2021-06-05T05:06:20.000Z","updated":"2021-06-05T05:06:20.000Z","comments":true,"path":"api/articles/WSL-texteditor.json","excerpt":"","keywords":null,"cover":null,"content":"<p>メモ</p>\n<h1 id=\"gedit-※Xサーバが必要\"><a href=\"#gedit-※Xサーバが必要\" class=\"headerlink\" title=\"gedit ※Xサーバが必要\"></a>gedit ※Xサーバが必要</h1><p>インストール<br><code>sudo apt install gedit</code></p>\n<p>起動<br><code>gedit</code></p>\n<p>トラブルが発生したら<br><code>sudo apt install gedit --fix-missing</code></p>\n<h1 id=\"VSCode\"><a href=\"#VSCode\" class=\"headerlink\" title=\"VSCode\"></a>VSCode</h1><p>インストール<br><a href=\"https://code.visualstudio.com/\">https://code.visualstudio.com/</a></p>\n<p>拡張機能 “Remote - WSL”をインストール</p>\n<p>起動<br><code>code</code></p>\n<h1 id=\"Vim-CUI\"><a href=\"#Vim-CUI\" class=\"headerlink\" title=\"Vim(CUI)\"></a>Vim(CUI)</h1><p>起動<br><code>vim (ファイル名)</code></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">i 編集開始</span><br><span class=\"line\">Esc 編集終了(コマンドモードに切替)</span><br><span class=\"line\">:q! 保存せずに終了</span><br><span class=\"line\">:wq 上書き保存して終了</span><br></pre></td></tr></table></figure>","text":"メモgedit ※Xサーバが必要インストール<br>sudo apt install gedit起動<br>geditトラブルが発生したら<br>sudo apt install gedit --fix-missingVSCodeインストール<br>https://code.vi","link":"","raw":null,"photos":[],"categories":[],"tags":[]},{"title":"Git for Windows 導入備忘録(Windows10 64bit)","slug":"git-for-windows-installation","date":"2020-06-02T15:00:00.000Z","updated":"2021-06-05T05:04:00.000Z","comments":true,"path":"api/articles/git-for-windows-installation.json","excerpt":"","keywords":null,"cover":null,"content":"<p>Git for WindowsをインストールしてからSSHキーを登録し，リポジトリを作成するまでのメモ</p>\n<h1 id=\"０．環境\"><a href=\"#０．環境\" class=\"headerlink\" title=\"０．環境\"></a>０．環境</h1><p>Windows 10 64bit</p>\n<h1 id=\"１．Git-for-Windows-をダウンロード＆インストール\"><a href=\"#１．Git-for-Windows-をダウンロード＆インストール\" class=\"headerlink\" title=\"１．Git for Windows をダウンロード＆インストール\"></a>１．Git for Windows をダウンロード＆インストール</h1><p>Git for Windows <a href=\"https://gitforwindows.org/\">https://gitforwindows.org/</a></p>\n<h1 id=\"２．Git-Bashで行う設定\"><a href=\"#２．Git-Bashで行う設定\" class=\"headerlink\" title=\"２．Git Bashで行う設定\"></a>２．Git Bashで行う設定</h1><ol>\n<li>インストールされたGit Bashを起動する</li>\n<li>下記のコードを実行する<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name &quot;githubのアカウント名&quot;</span><br><span class=\"line\">git config --global user.email &quot;githubのメールアドレス&quot;</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h1 id=\"３．新しいSSHキーを生成する\"><a href=\"#３．新しいSSHキーを生成する\" class=\"headerlink\" title=\"３．新しいSSHキーを生成する\"></a>３．新しいSSHキーを生成する</h1><p>下記のコードを実行する</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -b 4096 -C &quot;githubのメールアドレス&quot;</span><br></pre></td></tr></table></figure>\n<p>続々と設定項目が表示される<br>何も入力せずにエンターキーを押すとデフォルトの設定が適用される<br>passphrase は設定したほうがいい</p>\n<h1 id=\"４．SSHキーをssh-agentに追加する\"><a href=\"#４．SSHキーをssh-agentに追加する\" class=\"headerlink\" title=\"４．SSHキーをssh-agentに追加する\"></a>４．SSHキーをssh-agentに追加する</h1><p>下記のコードを実行する<br>(&#96;はバッククォート．WindowsキーボードならShift＋＠で入力できる）</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">eval `ssh-agent`</span><br><span class=\"line\">ssh-add ~/.ssh/id_rsa</span><br><span class=\"line\">clip &lt; ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure>\n<p>(clipコマンドで~&#x2F;.ssh&#x2F;id_rsa.pubの内容をコピーする)<br>何も表示されないがSSHキーをコピー出来ているはず<br>コピーできない場合はSSHキー(id_rsa.pub)を直接エディタで開いて中身を全てコピーする  </p>\n<h1 id=\"５．GitHubアカウントにSSHキーを登録する\"><a href=\"#５．GitHubアカウントにSSHキーを登録する\" class=\"headerlink\" title=\"５．GitHubアカウントにSSHキーを登録する\"></a>５．GitHubアカウントにSSHキーを登録する</h1><ol>\n<li>GitHubにアクセスし，Settings&gt;SSH and GPG keys&gt;New SSH keyを開く</li>\n<li>Titleに任意の名前，Keyに先程コピーしたSSHキーを貼り付ける</li>\n<li>Add SSH Keyをクリック</li>\n</ol>\n<h2 id=\"接続テスト\"><a href=\"#接続テスト\" class=\"headerlink\" title=\"接続テスト\"></a>接続テスト</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -T git@github.com</span><br></pre></td></tr></table></figure>\n<p>Hi (GitHubアカウント名)! と表示されたらアクセス成功<br>失敗した時は：<a href=\"https://help.github.com/ja/github/authenticating-to-github/error-permission-denied-publickey\">Error: Permission denied (publickey) - GitHub Docs</a></p>\n<h1 id=\"６．GitHubでリポジトリを作成する\"><a href=\"#６．GitHubでリポジトリを作成する\" class=\"headerlink\" title=\"６．GitHubでリポジトリを作成する\"></a>６．GitHubでリポジトリを作成する</h1><p>GitHubのWebサイトの右上の＋マークからNew repositoryを選択する<br>画面に従って作成する</p>\n<p>Git Bashで新しいフォルダを作成 or アップロードしたいフォルダへ移動し，<br>…or create a ner repository on the command に書いてあるコマンドを順に実行する</p>\n<h1 id=\"操作方法簡易メモ\"><a href=\"#操作方法簡易メモ\" class=\"headerlink\" title=\"操作方法簡易メモ\"></a>操作方法簡易メモ</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add ファイル名 # ファイルを追加</span><br><span class=\"line\">git commit -m &quot;メッセージ&quot; # 変更内容をコメント</span><br><span class=\"line\">git push -u origin main # 変更をサーバに反映させる</span><br></pre></td></tr></table></figure>\n<h2 id=\"git-add-でカレントディレクトリにあるすべてのファイルを追加できる\"><a href=\"#git-add-でカレントディレクトリにあるすべてのファイルを追加できる\" class=\"headerlink\" title=\"git add .でカレントディレクトリにあるすべてのファイルを追加できる\n  \"></a><code>git add .</code>でカレントディレクトリにあるすべてのファイルを追加できる\n  </h2><h2 id=\"参考資料\"><a href=\"#参考資料\" class=\"headerlink\" title=\"参考資料\"></a>参考資料</h2><p><a href=\"https://help.github.com/ja/github/getting-started-with-github/set-up-git\">Gitのセットアップ - GitHub</a><br><a href=\"https://qiita.com/sshojiro/items/60982f06c1a0ba88c160\">ssh-addできなかったときへの対処</a></p>\n","text":"Git for WindowsをインストールしてからSSHキーを登録し，リポジトリを作成するまでのメモ０．環境Windows 10 64bit１．Git for Windows をダウンロード＆インストールGit for Windows https://gitforwindows","link":"","raw":null,"photos":[],"categories":[],"tags":[]},{"title":"静的サイトジェネレータHexoを使ってGitHub Pagesにブログを公開したメモ","slug":"hexo-githubpages-introduction","date":"2020-06-02T15:00:00.000Z","updated":"2020-06-02T15:00:00.000Z","comments":true,"path":"api/articles/hexo-githubpages-introduction.json","excerpt":"","keywords":null,"cover":null,"content":"<h1 id=\"０．前提条件\"><a href=\"#０．前提条件\" class=\"headerlink\" title=\"０．前提条件\"></a>０．前提条件</h1><p>Node.js, gitがインストール済であること  </p>\n<p>環境：<br>Windows10<br>Git for WindowsのGit Bash  </p>\n<h1 id=\"１．Hexoのインストール、ページの作成\"><a href=\"#１．Hexoのインストール、ページの作成\" class=\"headerlink\" title=\"１．Hexoのインストール、ページの作成\"></a>１．Hexoのインストール、ページの作成</h1><p>下記ページの手順を順に実行する。  </p>\n<p>GitHub Pages<br><a href=\"https://pages.github.com/\">https://pages.github.com/</a></p>\n<p>GitHubでブログを公開する<br><a href=\"https://qiita.com/sakkuntyo/items/dca3ab792a30645b2d66\">https://qiita.com/sakkuntyo/items/dca3ab792a30645b2d66</a></p>\n<p>ここまでやったところで自分のサイトにアクセスすると404エラーになっていた<br>ちゃんとweb上で見られるようなhtmlの形式になっていないので<br>hexoを使って静的なHTMLファイルを生成しないと見られないっぽい</p>\n<h1 id=\"２．-config-ymlに以下の表記を追加-username-github-io-x2F-config-yml\"><a href=\"#２．-config-ymlに以下の表記を追加-username-github-io-x2F-config-yml\" class=\"headerlink\" title=\"２．_config.ymlに以下の表記を追加(username.github.io&#x2F;_config.yml)\"></a>２．_config.ymlに以下の表記を追加(username.github.io&#x2F;_config.yml)</h1><p>deployと書かれている箇所を次のように変更する  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git</span><br><span class=\"line\">  repo: git@github.com:username/username.github.io.git</span><br><span class=\"line\">  branch: master</span><br></pre></td></tr></table></figure>\n\n<p>Git Bashで実行  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># hexo-deployer-gitをインストール</span><br><span class=\"line\">npm install hexo-deployer-git --save</span><br><span class=\"line\"></span><br><span class=\"line\"># 静的HTMLを作成してGitHubリポジトリに反映</span><br><span class=\"line\">hexo deploy -g</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"３．テーマを変える\"><a href=\"#３．テーマを変える\" class=\"headerlink\" title=\"３．テーマを変える\"></a>３．テーマを変える</h1><p>Themes | Hexo<br><a href=\"https://hexo.io/themes/\">https://hexo.io/themes/</a><br>で好きなテーマを探す </p>\n<p>テーマのページにインストール方法が書かれていれば，それに従う</p>\n<p>テーマのgithubのページからclone＞Download ZIPでダウンロード<br>解凍してフォルダを丸ごとusername.github.io&#x2F;themes&#x2F;に移動<br>username.github.io&#x2F;_config.ymlのExtensionの部分のthemeをテーマのフォルダ名に書き換える  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Extensions</span><br><span class=\"line\">## Plugins: https://hexo.io/plugins/</span><br><span class=\"line\">## Themes: https://hexo.io/themes/</span><br><span class=\"line\">theme: テーマのフォルダ名</span><br></pre></td></tr></table></figure>\n\n<p>テーマを反映させる  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo deploy -g</span><br></pre></td></tr></table></figure>\n\n<p>うまく表示されなければ一度git cleanしてみる  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br><span class=\"line\">hexo deploy -g</span><br></pre></td></tr></table></figure>\n\n<p>テーマのフォルダの中の _config.yml を色々変えてみてカスタマイズする<br>フォントの変更方法: <a href=\"https://omathin.com/2020/04/11/icarus-theme-change/\">Hexoのicarusテーマのフォントの変え方 - omathin blog</a></p>\n<hr>\n<h2 id=\"参考資料\"><a href=\"#参考資料\" class=\"headerlink\" title=\"参考資料\"></a>参考資料</h2><p><a href=\"http://paki.github.io/2015/05/26/hexo%E3%81%A7%E3%83%96%E3%83%AD%E3%82%B0%E3%81%A4%E3%81%8F%E3%81%A3%E3%81%9F/\">hexoでブログつくった | User Interfxxk</a><br><a href=\"http://liginc.co.jp/web/programming/server/104594\">所要時間3分!? Github PagesとHEXOで爆速ブログ構築してみよう！ | 東京のWeb制作会社LIG</a><br><a href=\"https://pepese.github.io/blog/hexo-github-pages/\">Hexoで作ったブログをGithub Pagesで公開 | ぺーぺーSEのテックブログ</a><br><a href=\"https://nishidemasami.github.io/2016/12/11/hexo-themes-error/\">hexoのテーマを変更した時に、テーマだけデプロイされない | 文系SEコーディングハイ</a></p>\n","text":"０．前提条件Node.js, gitがインストール済であること  環境：<br>Windows10<br>Git for WindowsのGit Bash  １．Hexoのインストール、ページの作成下記ページの手順を順に実行する。  GitHub Pages<br>https:/","link":"","raw":null,"photos":[],"categories":[],"tags":[]},{"title":"Windows10でOctaveのファイルを実行する","slug":"octave-installation","date":"2020-06-02T15:00:00.000Z","updated":"2020-06-02T15:00:00.000Z","comments":true,"path":"api/articles/octave-installation.json","excerpt":"","keywords":null,"cover":null,"content":"<h1 id=\"０．事前準備\"><a href=\"#０．事前準備\" class=\"headerlink\" title=\"０．事前準備\"></a>０．事前準備</h1><p>Javaのランタイムが必要</p>\n<p>ランタイムがインストールされているかどうかの確認方法：<br><a href=\"https://java.com/ja/download/help/version_manual.xml\">https://java.com/ja/download/help/version_manual.xml</a><br>導入方法：<br><a href=\"https://eng-entrance.com/java-install-jdk-windows#JDK\">https://eng-entrance.com/java-install-jdk-windows#JDK</a></p>\n<p>動かしたいプログラムをダウンロード・解凍して適当な場所に置いておく<br>(パスに日本語が含まれていると上手く実行できない可能性有)</p>\n<h1 id=\"１．インストール\"><a href=\"#１．インストール\" class=\"headerlink\" title=\"１．インストール\"></a>１．インストール</h1><p><a href=\"https://ftp.gnu.org/gnu/octave/windows/\">https://ftp.gnu.org/gnu/octave/windows/</a> にアクセス<br>ページの下の方にある最新のインストーラー(<code>octave-6.2.0-w64-installer.exe</code>:2021&#x2F;03&#x2F;10現在)をダウンロード<br>(32bitなら<code>octave-6.2.0-w32-installer.exe</code>をダウンロードする)</p>\n<h1 id=\"２．実行\"><a href=\"#２．実行\" class=\"headerlink\" title=\"２．実行\"></a>２．実行</h1><p>GNU Octave (GUI)を起動する  </p>\n<p>画面右のコマンドウィンドウで動かしたいプログラムのあるフォルダまでcdコマンドで移動する<br>それか左の”ファイルブラウザ”で頑張ってフォルダにたどり着く  </p>\n<p>コマンドプロンプトに実行したい関数名(引数)で実行出来る（例: coin_a3(3,3))  </p>\n<h1 id=\"３．もしエラーが出たら\"><a href=\"#３．もしエラーが出たら\" class=\"headerlink\" title=\"３．もしエラーが出たら\"></a>３．もしエラーが出たら</h1><p>フォルダ名やファイル名に日本語が含まれていないか確認する<br>実行したいファイルがある場所がカレントディレクトリになっているか確認する<br>エラーメッセージ内に不足しているパッケージ名が書いてあれば，それをインストールする  </p>\n<p>例) imageパッケージのインストール方法</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pkg rebuild all</span><br><span class=\"line\">pkg install -forge image</span><br><span class=\"line\">pkg load image</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"４．アンインストール\"><a href=\"#４．アンインストール\" class=\"headerlink\" title=\"４．アンインストール\"></a>４．アンインストール</h1><p>設定＞アプリと機能　からアンインストールすることができる（Windows10）  </p>\n<hr>\n<h2 id=\"参考資料\"><a href=\"#参考資料\" class=\"headerlink\" title=\"参考資料\"></a>参考資料</h2><p><a href=\"https://ja.wikibooks.org/wiki/GNU_Octave_2.1.x_%E6%97%A5%E6%9C%AC%E8%AA%9E%E3%83%9E%E3%83%8B%E3%83%A5%E3%82%A2%E3%83%AB\">GNU Octave 2.1.x 日本語マニュアル - Wikibooks</a><br><a href=\"https://www.kkaneko.jp/tools/win/octave.html\">Octave 5.1.0 のインストール（Windows 上）</a></p>\n","text":"０．事前準備Javaのランタイムが必要ランタイムがインストールされているかどうかの確認方法：<br>https://java.com/ja/download/help/version_manual.xml<br>導入方法：<br>https://eng-entrance.com/","link":"","raw":null,"photos":[],"categories":[],"tags":[]}]}