{"title":"Webアプリ作成 day1 - AWS EC2 環境構築(Django,MySQL)","slug":"webapp-day1","date":"2023-05-13T11:05:30.000Z","updated":"2023-05-13T11:05:30.000Z","comments":true,"path":"api/articles/webapp-day1.json","photos":[],"link":"","excerpt":null,"covers":null,"content":"<hr>\n<h2 id=\"title-AWS-EC2-環境構築-Django-date-2023-01-03-00-00-00tags-updated-2022-01-03-00-00-00\"><a href=\"#title-AWS-EC2-環境構築-Django-date-2023-01-03-00-00-00tags-updated-2022-01-03-00-00-00\" class=\"headerlink\" title=\"title: AWS EC2 環境構築(Django)date: 2023-01-03 00:00:00tags:updated: 2022-01-03 00:00:00\"></a>title: AWS EC2 環境構築(Django)<br>date: 2023-01-03 00:00:00<br>tags:<br>updated: 2022-01-03 00:00:00</h2><h1 id=\"Django-MySQL-AWS-EC2-で爆速Webアプリ構築【1日目】\"><a href=\"#Django-MySQL-AWS-EC2-で爆速Webアプリ構築【1日目】\" class=\"headerlink\" title=\"Django + MySQL + AWS EC2 で爆速Webアプリ構築【1日目】\"></a>Django + MySQL + AWS EC2 で爆速Webアプリ構築【1日目】</h1><p>** 書きかけの記事です **</p>\n<p>作りたい:<br>進捗管理SNS</p>\n<ul>\n<li>markdownで書ける</li>\n<li>グラフも投稿できる</li>\n</ul>\n<p>開始地点の知識レベル:</p>\n<ul>\n<li>Djangoって何？</li>\n<li>SQLは少し使ったことある</li>\n<li>AWS EC2って何？</li>\n</ul>\n<hr>\n<h2 id=\"toDo\"><a href=\"#toDo\" class=\"headerlink\" title=\"toDo\"></a>toDo</h2><ul>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> アプリケーション機能要件</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> アプリケーション画面設計<ul>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 見た目の画像</li>\n</ul>\n</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> アプリケーションデータベース設計</li>\n<li>[] ローカル環境構築(docker)</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> AWSをレンタル</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 環境構築(Django, Nginx, MySQL)<ul>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> MySQLでデータベース作成<ul>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> MySQLのタイムゾーン設定</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>[] Bootstrapを導入、見た目をいい感じにする</li>\n<li>[] Webアプリケーションログイン画面の構築</li>\n</ul>\n<p>AWSの設定まで<br><a href=\"https://qiita.com/Bashi50/items/d5bc47eeb9668304aaa2\">https://qiita.com/Bashi50/items/d5bc47eeb9668304aaa2</a></p>\n<p>Ubuntuにログイン<br>使い慣れてたのでMySQLを導入<br><code>sudo apt install mysql-server nginx</code></p>\n<h2 id=\"MySQL初期設定\"><a href=\"#MySQL初期設定\" class=\"headerlink\" title=\"MySQL初期設定\"></a>MySQL初期設定</h2><p>sudo apt install mysql-server<br>sudo service mysql start</p>\n<p>sudo mysql_secure_installation</p>\n<p>再起動: sudo service mysql restart<br>状態確認: sudo service mysql status<br>起動: sudo mysql -u root -p</p>\n<p>エラーが発生したら<br><code>less /var/log/mysql/error.log</code><br>sockファイルが作れない</p>\n<p><code>cat /etc/passwd</code><br>mysqlのところが&#x2F;unexistになってたら↓</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo usermod -d /var/lib/mysql mysql</span><br><span class=\"line\"></span><br><span class=\"line\">$ sudo chown -R mysql:mysql /var/lib/mysql*</span><br><span class=\"line\">(mysql, mysql-files, mysql-upgrade)</span><br><span class=\"line\"></span><br><span class=\"line\">$ sudo chown -R mysql:mysql /var/run/mysqld/</span><br><span class=\"line\"></span><br><span class=\"line\">$ sudo chown mysql:mysql /usr/sbin/mysqld</span><br></pre></td></tr></table></figure>\n<p>権限の初期化について(<a href=\"https://codenote.net/mysql/339.html\">https://codenote.net/mysql/339.html</a>)</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">user create</span><br><span class=\"line\">CREATE USER &#x27;username&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;password&#x27;;</span><br></pre></td></tr></table></figure>\n\n<p>パスワードで引っかかるなら mysqlで起動して↓で設定する　それもだめなら↓↓</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SHOW VARIABLES LIKE &#x27;validate_password%&#x27;;</span><br><span class=\"line\">set global validate_password.policy=LOW;</span><br></pre></td></tr></table></figure>\n\n\n<p>操作権限を与える</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GRANT ALL PRIVILEGES ON * . * TO &#x27;newuser&#x27;@&#x27;localhost&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">GRANT type_of_permission ON database_name.table_name TO &#x27;username&#x27;@&#x27;localhost&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">    ALL PRIVILEGES-前述したように、MySQLユーザーは指定されたデータベースへフルアクセスができます（または、データベースが選択されていない場合は、システム全体のグローバルアクセスができます）。</span><br><span class=\"line\">    CREATE - 新しいテーブルまたはデータベースを作成できます。</span><br><span class=\"line\">    DROP - テーブルまたはデータベースを削除できます。</span><br><span class=\"line\">    DELETE - テーブルから行を削除できます。</span><br><span class=\"line\">    INSERT - テーブルに行を挿入できます。</span><br><span class=\"line\">    SELECT - SELECTコマンドを使用してデータベースを読み取ることができます。</span><br><span class=\"line\">    UPDATE - テーブルの行を更新できます。</span><br><span class=\"line\">    GRANT OPTION - 他のユーザーの権限の付与または削除ができます。</span><br><span class=\"line\">(https://www.digitalocean.com/community/tutorials/how-to-create-a-new-user-and-grant-permissions-in-mysql-ja)</span><br></pre></td></tr></table></figure>\n\n<p>データベース作成</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE DATABASE test_database;</span><br><span class=\"line\">USE test_database;</span><br><span class=\"line\"></span><br><span class=\"line\">CREATE TABLE users (id INT AUTO_INCREMENT, name TEXT,</span><br><span class=\"line\">PRIMARY KEY (id));</span><br><span class=\"line\"></span><br><span class=\"line\">SHOW tables;</span><br><span class=\"line\">DESCRIBE users;</span><br><span class=\"line\"></span><br><span class=\"line\">INSERT INTO users(name) VALUES(&#x27;USERNAME&#x27;);</span><br></pre></td></tr></table></figure>\n\n<p>テーブルの削除<br>DROP TABLE テーブル名(users);<br>データベースの削除<br>DROP DATABASE データベース名(test_database);</p>\n<p><a href=\"https://prog-8.com/docs/nodejs-mysql\">https://prog-8.com/docs/nodejs-mysql</a><br>node app.js</p>\n<p>データベースの読み込みと変更<br><a href=\"https://programming-engineer.com/nodejs-database-edit/\">https://programming-engineer.com/nodejs-database-edit/</a></p>\n<p>接続時にエラー<br>内容と解決法: <a href=\"https://mebee.info/2021/06/17/post-24512/\">https://mebee.info/2021/06/17/post-24512/</a></p>\n<p>文字コードをutf8に変える<br>参考: <a href=\"http://ucwd.jp/blog/814\">http://ucwd.jp/blog/814</a></p>\n<p>INSERT INTO app_post (title, content, created_at, updated_at) VALUES(‘title’, ‘本文’, ‘1000-01-01 00:00:00.000000’, ‘1000-01-01 00:00:00.000000’);<br>文字コードをutf8にする</p>\n<p>↓のコマンドで日本時間に設定しようとしたが、</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">show variables like &quot;%time_zone%&quot;;</span><br><span class=\"line\">$ /usr/bin/mysql_tzinfo_to_sql /usr/share/zoneinfo &gt; ~/timezone.sql</span><br><span class=\"line\">$ mysql -u root -p -Dmysql &lt; ~/timezone.sql</span><br><span class=\"line\">or $ /usr/bin/mysql_tzinfo_to_sql /usr/share/zoneinfo | mysql -u ihara -p mysql</span><br></pre></td></tr></table></figure>\n<p>↑どっちも設定してくれない。ダメ</p>\n<p>mysql &gt; set time_zone&#x3D;’+9:00’はいけるのにset globalはムリ<br>RDS系はだめらしい？<br>&#x2F;etc&#x2F;mysql&#x2F;my.cnfにcnfの場所が記載されている<br>&#x2F;etc&#x2F;mysql&#x2F;conf.d&#x2F;mysql.cnfの[mysqld]にdefault_time_zone&#x3D;’+9:00’を追記したらいけた<br>select time();で時間確認</p>\n<p>トランザクション分離レベルを設定<br>transaction-isolation &#x3D; READ-COMMITTED</p>\n<h2 id=\"データベースの作成\"><a href=\"#データベースの作成\" class=\"headerlink\" title=\"データベースの作成\"></a>データベースの作成</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE DATABASE howis_database;</span><br><span class=\"line\">USE howis_database;</span><br><span class=\"line\">CREATE TABLE users (user_id INT UNSIGNED AUTO_INCREMENT, user_email VARCHAR(320), user_password VARCHAR(150), user_name VARCHAR(40),　user_registration_date DATE, user_updated_date DATE, PRIMARY KEY (user_id));</span><br><span class=\"line\"></span><br><span class=\"line\">CREATE TABLE posts (post_id BIGINT UNSIGNED AUTO_INCREMENT, post_user INT UNSIGNED, post_date DATETIME, edited BIT(1), edited_date DATETIME, post_title VARCHAR(50),　post_summary VARCHAR(250), post_content TEXT, FOREIGN KEY fk_post_user(post_user) REFERENCES users(user_id), PRIMARY KEY (post_id));</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Django環境構築\"><a href=\"#Django環境構築\" class=\"headerlink\" title=\"Django環境構築\"></a>Django環境構築</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ pip install django django-environ dj-database-url</span><br><span class=\"line\">$ sudo apt install python3-django</span><br><span class=\"line\">$ django-admin startproject AppName .</span><br><span class=\"line\">$ django-admin startapp app</span><br></pre></td></tr></table></figure>\n\n<p>settingsからsecretkeyなどを削除, .envに退避させる<br>(<a href=\"https://qiita.com/Bashi50/items/d5bc47eeb9668304aaa2)[https://qiita.com/Bashi50/items/d5bc47eeb9668304aaa2]\">https://qiita.com/Bashi50/items/d5bc47eeb9668304aaa2)[https://qiita.com/Bashi50/items/d5bc47eeb9668304aaa2]</a><br>Django, MySQL: (<a href=\"https://qiita.com/kanazawa1226/items/e222604943c500801746)[https://qiita.com/kanazawa1226/items/e222604943c500801746]\">https://qiita.com/kanazawa1226/items/e222604943c500801746)[https://qiita.com/kanazawa1226/items/e222604943c500801746]</a></p>\n<p>PythonがMySQLにアクセスするためのドライバのインストール<br>mysqlclient（MySQL-Pythonをpython3に対応させたOSS。Djangoの推奨ドライバ）</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo apt -y install libmysqlclient-dev</span><br><span class=\"line\">$ pip install mysqlclient</span><br></pre></td></tr></table></figure>\n\n<p>.envにARROWED_HOSTSを追記する(AWS EC2インスタンスのelastic IPアドレス)<br>mysql:&#x2F;&#x2F;root:(最初の方で設定したrootのパスワード)@127.0.0.1:3306&#x2F;(db_name)<br>settings.pyを変更</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python3 manage.py migrate</span><br><span class=\"line\"># EC2の設定で8000ポート許可して以下を実行</span><br><span class=\"line\">$ python3 manage.py runserver 0.0.0.0:8000</span><br></pre></td></tr></table></figure>\n<p>ブラウザにインスタンスのipアドレス:8000を入力すればつながる!</p>\n<p>&#x2F;etc&#x2F;systemd&#x2F;system&#x2F;gunicorn.serviceにgunicornの設定を追加</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo apt install gunicorn</span><br><span class=\"line\">$ whereis gunicorn</span><br></pre></td></tr></table></figure>\n<p><code>/usr/bin/gunicorn</code></p>\n<p>&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;nginx.service<br>&#x2F;etc&#x2F;nginx&#x2F;sites-available&#x2F;Launch<br>自動起動設定</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo systemctl start gunicorn.service</span><br><span class=\"line\">$ sudo systemctl enable gunicorn</span><br></pre></td></tr></table></figure>\n\n<p><code>sudo ln -s /etc/nginx/sites-available/Launch /etc/nginx/sites-enabled/</code></p>\n<p>502 Bad Gateway…<br>nginxのログのパス確認</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ less /etc/nginx/nginx.conf</span><br></pre></td></tr></table></figure>\n<p>…<br>access_log &#x2F;var&#x2F;log&#x2F;nginx&#x2F;access.log;<br>error_log &#x2F;var&#x2F;log&#x2F;nginx&#x2F;error.log;<br>…</p>\n<p>connect() to unix:&#x2F;hoge.sock failed (13: Permission denied) while connecting to upstream, client: a.a.a.a, server: a.a.a.a, request: “GET &#x2F; HTTP&#x2F;1.1”, upstream: “<a href=\"http://unix/home/ubuntu/HowistheProgress/howisApp.sock:/\">http://unix:/home/ubuntu/HowistheProgress/howisApp.sock:/</a>“, host: “a.a.a.a”<br>ただのpermissionエラーでよかった～<br>権限変更</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo vim /etc/nginx/nginx.conf</span><br><span class=\"line\">user ubuntu(or root)</span><br></pre></td></tr></table></figure>\n\n<p>順調！</p>\n<p>model.pyに追記<br>python manage. py createsuperuser<br>IPアドレス&#x2F;adminでログイン</p>\n<p>bootstrap テーマ導入しようとしてうまくいかず1日目終了</p>\n","categories":[],"tags":[]}